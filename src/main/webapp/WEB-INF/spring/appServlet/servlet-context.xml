<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<mvc:annotation-driven/>

	<!-- 정적파일 경로 세팅 -->
	<mvc:resources location="/resources/" mapping="/**"></mvc:resources>
	<mvc:resources location="/resources/" mapping="/static/**"></mvc:resources>
	<mvc:resources location="/resources/" mapping="/images/**"></mvc:resources>

	<!-- ViewResolver를 통한 JSP 경로 세팅 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/PetsFinder/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 애플리케이션 시작시 자동으로 스캔할 기본패키지 지정 -->
	<context:component-scan base-package="com.kosmo.petsfinder" />
	<context:component-scan base-package="petsfinder" />
	
	<!--  SPRING JDBC를 사용하기 위한 빈 생성 -->	
	<!-- 
	첫 번째 자바빈 : 오라클 연결 정보를 가지고 있는 자바빈으로 '데이터근원지'라고 한다. 
			해당 빈을 통해 DB에 연결할 수 있다.
	-->
	<bean name="dataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="kosmo" />
		<property name="password" value="1234" />
	</bean>
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:petsfinder/mapper/*.xml"/>
	</bean>
	<bean name="sqlSession" 
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	<!-- spring-web-xxx.jar에 포함된 패키지 -->
	<!-- 파일 업로드 빈 생성 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
</beans>
